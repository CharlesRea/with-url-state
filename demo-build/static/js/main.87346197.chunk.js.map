{"version":3,"sources":["App.tsx","index.tsx"],"names":["SearchForm","react_default","a","createElement","withUrlState","initialState","name","render","_ref","urlState","setUrlState","placeholder","onChange","e","target","value","style","paddingBottom","paddingLeft","paddingRight","paddingTop","marginBottom","withAsync","producer","fetch","concat","then","r","json","_ref2","error","isLoading","result","results","map","character","key","url","padding","MapRegion","lat","lng","zoom","_ref3","Map","center","Number","onViewportChanged","_ref4","_ref4$center","Object","slicedToArray","height","width","TileLayer","attribution","ColorPicker","color","enhance","props","className","backgroundColor","onClick","react","example","_ref5","Fragment","href","position","top","right","border","src","alt","App_SearchForm","App_MapRegion","document","getElementById"],"mappings":"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","file":"static/js/main.87346197.chunk.js","sourcesContent":["import React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport { Async } from 'with-async'\nimport { withUrlState, UrlStateProps, UrlState } from 'with-url-state'\nimport 'leaflet/dist/leaflet.css'\nimport './App.css'\n\ntype SearchResults = {\n  count: number\n  results: Array<{\n    name: string\n    height: string\n    url: string\n  }>\n}\n\nconst characterSearch = (name: string): Promise<SearchResults> =>\n  fetch(`https://swapi.co/api/people/?search=${name}`).then(r => r.json())\n\ntype FormState = { name: string }\nexport const SearchForm = () => (\n  <UrlState<FormState>\n    initialState={{ name: 'Skywalker' }}\n    render={({ urlState, setUrlState }) => (\n      <div>\n        <input\n          placeholder=\"Search\"\n          onChange={e => setUrlState({ name: e.target.value })}\n          style={{\n            paddingBottom: 5,\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 5,\n            marginBottom: 20,\n          }}\n          value={urlState.name}\n        />\n        <Async\n          producer={() => characterSearch(urlState.name)}\n          render={({ error, isLoading, result }) => (\n            <div>\n              {isLoading && <p>Loading</p>}\n              {result != null &&\n                result.results.map(character => (\n                  <div\n                    key={character.url}\n                    style={{\n                      padding: 10,\n                    }}\n                  >\n                    {character.name}\n                  </div>\n                ))}\n            </div>\n          )}\n        />\n      </div>\n    )}\n  />\n)\n\ntype MapState = { lat: string; lng: string; zoom: string }\nexport const MapRegion = () => (\n  <UrlState<MapState>\n    initialState={{ lat: '51.45999681055091', lng: '-2.583847045898438', zoom: '12' }}\n    render={({ urlState, setUrlState }) => (\n      <div>\n        <Map\n          center={{ lat: Number(urlState.lat), lng: Number(urlState.lng) }}\n          onViewportChanged={({ center: [lat, lng], zoom }: any) =>\n            setUrlState({ lat, lng, zoom })\n          }\n          zoom={Number(urlState.zoom)}\n          style={{\n            height: 800,\n            width: 600,\n          }}\n        >\n          <TileLayer\n            attribution={`&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors`}\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </Map>\n      </div>\n    )}\n  />\n)\n\ntype ColorState = { color: string }\nconst enhance = withUrlState<ColorState, {}>(() => ({ color: 'blue' }))\nexport const ColorPicker = enhance((props: UrlStateProps<ColorState>) => (\n  <div className=\"UrlForm\" style={{ backgroundColor: props.urlState.color }}>\n    <div className=\"current-state\">\n      <div>{props.urlState.color}</div>\n    </div>\n    <div className=\"color-buttons\">\n      <button className=\"Red\" onClick={() => props.setUrlState({ color: 'red' })}>\n        Red\n      </button>\n      <button className=\"Green\" onClick={() => props.setUrlState({ color: 'green' })}>\n        Green\n      </button>\n      <button className=\"Blue\" onClick={() => props.setUrlState({ color: 'blue' })}>\n        Blue\n      </button>\n    </div>\n  </div>\n))\n\ntype ExampleState = { example: 'map' | 'form' | 'color' }\nexport default () => (\n  <UrlState<ExampleState>\n    initialState={{ example: 'color' }}\n    render={({ urlState, setUrlState }) => (\n      <>\n        <a href=\"https://github.com/Dean177/with-url-state\">\n          <img\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              border: 0,\n            }}\n            src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"\n            alt=\"Fork me on GitHub\"\n          />\n        </a>\n        <div className=\"example-buttons\">\n          <button\n            className={urlState.example === 'color' ? 'active' : ''}\n            onClick={() => setUrlState({ example: 'color' })}\n          >\n            Color Picker\n          </button>\n          <button\n            className={urlState.example === 'form' ? 'active' : ''}\n            onClick={() => setUrlState({ example: 'form' })}\n          >\n            Search form\n          </button>\n          <button\n            className={urlState.example === 'map' ? 'active' : ''}\n            onClick={() => setUrlState({ example: 'map' })}\n          >\n            Map\n          </button>\n        </div>\n        {urlState.example === 'color' && <ColorPicker />}\n        {urlState.example === 'form' && <SearchForm />}\n        {urlState.example === 'map' && <MapRegion />}\n      </>\n    )}\n  />\n)\n","import React, { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\n\nrender(<StrictMode><App /></StrictMode>, document.getElementById('root'))\n"],"sourceRoot":""}